6. (가)
힙은 보통 배열로 구현되고, 힙의 높이는 log₂(N)입니다. buildheap() 함수는 주어진 배열
을 힙 속성을 만족하도록 재구성해야 합니다. 각 노드에 대해 최대 힙 속성을 유지하는
작업을 수행하므로, 각 노드에 대해 상향식으로 작업을 수행하면 전체 힙을 구축할 수
있습니다.
각 노드에 대해 최대 힙 속성을 유지하는 데 걸리는 시간은 O(log₂(N))입니다. 힙의 높이
가 log₂(N)이므로, 한 번에 한 노드씩 상향식으로 작업하는 데 걸리는 시간이 log₂(N)이
라 할 수 있습니다.
따라서, buildheap() 함수 전체의 수행 시간은 힙의 모든 노드에 대해 최대 힙 속성을 유
지하는 작업을 수행하므로 O(N * log₂(N))입니다. 하지만 빅오 표기법에서 상수 계수는 무
시되므로, 최종적으로는 O(N)으로 표기할 수 있습니다.
(나)
최대 힙에서 가장 큰 값을 삭제하는 과정은 다음과 같습니다:
1.루트 노드의 값(가장 큰 값)를 삭제한다.
2.힙의 마지막 노드를 루트로 옮긴다.
3.새로운 루트에서부터 아래로 내려가면서 최대 힙 속성을 만족하도록 재조정한다.
힙은 이진 트리 구조이므로 각 레벨마다 노드의 수가 2배씩 증가합니다. 따라서 재조정
단계에서 각 레벨을 한 번 내려갈 때마다 현재 레벨의 노드 수는 절반으로 줄어듭니다.
이러한 특성 때문에 힙에서의 각 재조정 단계가 O(log N) 시간 복잡도를 가지게 됩니다.
따라서 deleteMax() 함수의 전체 수행 시간은 O(log N)이 됩니다. 이는 힙의 높이(log N)
와 관련이 있으며, 힙의 크기에 비례하지 않고 높이에 로그 함수가 들어가기 때문에 빅
오(log N)으로 표기됩니다.