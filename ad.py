##------------------------------------------------------------------------------------------------------------
import time


def line():
    print("--------------------------------------------------------------------------------")
    time.sleep(1)


ending_king = 0
# -------------------------------------------------------------------------------------------------------------

line()
print("옛날 옛적, 곰 왕국과 호랑이 왕국은 거대한 산을 사이에 두고 번성한 사이좋은 국가였습니다.")
print("두 나라는 자주 왕래하며 국가의 특산품을 나누고, 함께 힘을 모아 축제를 열기도 하며 후대의 번영을 기원하였습니다.")
print("그렇게 오랜 시간이 지났습니다.")
print("무엇보다 백성들을 우선시 하는 따뜻하고 어진 곰킹 임금이 이끄는 곰 왕국은 안전하고 풍요로운 나라를 유지하고 있었습니다.")
print("그에 반해 호랑이 왕국은 임금부터 신하들까지 욕심으로 지도세력이 부패하였습니다. 그들은 사치와 향락만을 쫓아다니며 백성을 수탈하며 살아가고 있었습니다. 나라 또한 위태로웠지요.")
print("호랑이 왕국의 국고는 점점 바닥이 드러나기 시작했고, 결국 곰 왕국을 위협하기 시작합니다.")
line()
print('"곰부님 큰일났습니다! 둘째 왕자 곰수님이 납치되었다고 합니다!"')
print('"뭐라고?"')
print('"호랑이 왕국에서 온 공문입니다."')
# 공문 내용, 나중에 깔끔하게 묶기#
print('<<곰 왕국의 왕자는 들어라.>>')
print("너의 동생 곰수를 납치했다. 10일까지 통마늘 500개를 호랑이왕국으로 가져오면 곰수를 풀어줄 것이고, 그렇지 않으면 먼 나라에 팔아버릴 것이다.")
line()

print("System: 당신(플레이어)은 이제 주인공 곰부가 되었습니다. 곰부는 곰킹과 곰마마에게 곰수를 구하겠다고, 자기만 믿어달라며 집을 나섰습니다.")
print("당신은 곰수를 구하기 위해 호랑이 왕국으로 떠나야 합니다.")
print("System: 당신은 호랑이 왕국이 어떤 나라인지 잘 알고 계신가요?")
# 대답 제대로 안 하면 구간 반복#
A = 1
while A > 0:
    print("(1) 안다 (2) 모른다 (번호를 입력하시오.)")
    n = int(input())
    A = 0
    if (n == 1):
        # 추가 엔딩에 대한 정보를 주는 선택지: 두 나라의 마늘 시세 차이를 이용해 이득을 취할 수 있다.#
        print("당연히 알고 있지요.")
        print("System: 아시다시피 호랑이 왕국은 곰왕국보다 물가가 싼 나라입니다.")
        print("<마늘을 더 가져가서 판다면 오히려 이득을 취할 수 있을 것으로 보입니다.>")
        print("감사합니다.")
        ending_king = 1
    elif (n == 2):
        print("사실 잘 모릅니다.")
        print("System: 호랑이 왕국은 산 하나를 넘어야 갈 수 있는 나라입니다. 먼 길을 가야하니 짐을 최소한으로 들고 가세요.")
        print("예. 알겠습니다.")
    else:
        print("System: 다시 정확하게 번호를 입력하여 대답해 주세요.")
        A = 1
2
line()
print("System: 곰 왕국에서 호랑이 왕국으로 가는 방법은 총 3가지가 있습니다.")
print("첫 번째, 산길로 가는 방법")
print("두 번째, 마차로 가는 방법")
print("세 번째, 평지를 걸어서 가는 방법")
print("설명을 원하는 방법을 말씀해 주세요.")


# ------------------------------------------------------------------
def method_sangli():
    print("System: 산길을 걸어 가면 3박4일이면 호랑이 왕국에 도착할 수 있습니다.")
    print("하지만 밤에 1/3확률로 산적을 만나게 되는데, 산적은 보유한 마늘의 1/4을 약탈합니다.")
    print("하룻밤에 1500원으로 경호원을 고용할 경우 산적을 무조건 쫓아낼 수 있습니다. 물론 경호원은 하루 단위로 계약할 수 있습니다.")
    line()


def method_macha():
    print("System: 마차를 타고 가면 전용도로를 이용하여 7일이면 호랑이 왕국에 도착할 수 있습니다.")
    print("혹시 중간에 돌아올 경우를 대비하여 선금 1500원을 지불하고, 마부에게 6일동안 최소 400원을 품삯으로 주어야 합니다.")
    line()


def method_walk():
    print("System: 도보로 평지를 걸어 가면 10일이면 호랑이 왕국에 도착합니다. 하루 숙식비로 최소100원, 최대 300원이 소모됩니다.")
    print("하루 체력감소량: 기본 체력 감소 4 + 보유 마늘개수*1/100")
    print("체력이 100이하가 되면 곰부는 더이상 걸어갈 수 없습니다. 체력을 생각하여 숙소를 정해주세요.")
    line()


# ------------------------------------------------------------------
# 첫 번째 설명
# 대답 제대로 안 하면 다시 말하게 하기
A = 1
while A == 1:
    print("(1) 산길 (2) 마차 (3) 도보 (번호를 입력하시오)")
    way = int(input())
    if way == 1:
        print("산길로 가는 방법이 궁금합니다.")
        method_sangli()
        A = 0
        AA = 0
    elif way == 2:
        print("마차로 가는 방법이 궁금합니다.")
        method_macha()
        A = 0
        AA = 0
    elif way == 3:
        print("도보로 가는 방법이 궁금합니다.")
        method_walk()
        A = 0
        AA = 0
    else:
        print("System: 무슨 말씀인지 모르겠어요. 다시 선택지에 있는 방법을 말씀해 주세요.")

# 다시 설명 or 다른 방법
# 대답 제대로 안 하면 다시 말하게 하기
B = 0
while B == 0:
    print("System: 다시 설명을 원하거나 다른 방법이 궁금하시면 숫자를 입력해 주세요.")
    print("(1) 산길 (2) 마차 (3) 도보 (4) 궁금하지 않습니다.")
    way = int(input())
    if way == 1:
        print("산길로 가는 방법이 궁금합니다.")
        method_sangli()
        B = 1
        way2 = 1
    elif way == 2:
        print("마차를 타고 가는 방법이 궁금합니다.")
        method_macha()
        B = 1
        way2 = 1
    elif way == 3:
        print("도보로 가는 방법이 궁금합니다.")
        method_walk()
        B = 1
        way2 = 1
    elif way == 4:
        print("더 이상 궁금한 것이 없습니다.")
        print("System: 설명이 충분했다니 다행입니다.")
        B = 1
        way2 = 2
    else:
        print("System: 무슨 말씀인지 모르겠어요. 다시 말씀해 주세요")
        line()

# 전 항목에서 더 궁금한 것이 있다고 답했을 경우
while way2 == 1:
    print("System: 다시 설명을 원하거나 다른 방법이 궁금하시면 숫자를 입력해 주세요.")
    print("(1) 산길 (2) 마차 (3) 도보 (4) 궁금하지 않습니다.")
    way = int(input())
    if way == 1:
        print("산길로 가는 방법이 궁금합니다.")
        method_sangli()
        B = 1
    elif way == 2:
        print("마차를 타고 가는 방법이 궁금합니다.")
        method_macha()
        B = 1
    elif way == 3:
        print("도보로 가는 방법이 궁금합니다.")
        method_walk()
        B = 1
    elif way == 4:
        print("더 이상 궁금한 것이 없습니다.")
        print("System: 설명이 충분했다니 다행입니다.")
        B = 1
        way2 = 2
    else:
        print("System: 무슨 말씀인지 모르겠어요. 다시 말씀해 주세요")
        line()

# 곰부 출발#
line()
print("System: 더이상은 이야기를 나눌 시간이 없습니다. 당신은 어떤 방법으로 가실 건가요?")
C = 0
while C == 0:
    print("(1) 산길 (2) 마차 (3) 평지 도보")
    go = int(input())
    if go == 1:
        C = 1
        print("System: 산길로 가겠다니 대단하시군요. 운이 나쁘면 산적을 만날 수 있으니 대비하시길 바랍니다.")
        print("경호원은 하룻밤에 1500원이니 마늘을 구매하실 때 꼭 참고해주세요. 최소 1500원, 최대 4500원이 소모됩니다.")
    elif go == 2:
        C = 1
        print("System: 마차를 타고 가시는군요. 안전히 가시길.")
        print("마차 대여료 및 인건비 3900원은 꼭 남겨두세요.")
    elif go == 3:
        C = 1
        print("System: 걸어서 가시는군요. 최소 여행경비는 1000원입니다.")
        print("마늘을 많이 챙길 수록 체력이 빨리 닳으니 체력 분배에 신경을 쓰시길 바랍니다.")
    else:
        print("다시 대답해주세요.")

line()
print("당신의 현재 전 재산은 10000원입니다.")
print("당신은 마늘을 최소 500개 구매하여야 하며, 마늘을 사고 남은 여행경비는 경호원, 마차, 숙식비 등에 사용할 수 있습니다.")

if ending_king == 1:
    print("곰 왕국의 마늘은 개당 10원이지만 호랑이 왕국에선 50원에 팔립니다.")
    print("여행경비를 꼭 생각해서 결정해주세요.")
else:
    print("곰 왕국 마늘은 개당 10원입니다. 당신은 10000원으로 마늘 최소 500개, 필요하시다면 더 구매할 수 있습니다.")
    print("필요한 최소 여행경비를 생각하고 몇 개의 마늘을 구매할지 결정해주세요.")

money = 10000
manuel = 0

line()
print("마늘을 몇 개 구매하시겠습니까? (500개 이상, 숫자를 입력해주시오)")
hope = int(input())
while hope > 0:
    if hope < 499 and hope >= 0:
        print("곰수를 구하기 위해서는 500개의 마늘이 필요합니다. 구매할 마늘 수를 다시 입력하세요.")
    elif hope == 500:
        print("정확히 500개의 마늘을 드릴게요. 당신은 5천원이 남았습니다.")
        money = money - hope * 10
        break
    elif hope <= 1000 and hope > 500:
        money = money - hope * 10
        print("당신은 ", hope, "개의 마늘을 구매했습니다.")
        print("남은 금액은 ", money, "원입니다.")
        break
    else:
        print("여행경비를 고려하여 구매할 마늘 수를 다시 말씀해주세요.")
    hope = int(input())
manuel = hope

line()
print("곰부는 마늘 ", manuel, "개와 경비", money, "원을 가지고 호랑이 왕국으로 길을 나섭니다.")


# ------------------------------------------------------------------------------------------------------
#  배드엔딩, 해피엔딩 모음
# ______________________________________________________________________________________________________

# 산길> 마늘이 500개 이하가 된 경우, 게임은 종료된다/ 배드엔딩
def ending(A):
    manuel_num = A
    if manuel_num < 500:
        print('')
        print("산적의 약탈로 호랑이 왕국에 가져갈 마늘이 500개보다 적어졌습니다.")
        print("곰부는 곰킹과 곰마마를 볼 면목이 사라졌습니다.")
        print("자신만 믿으라며 당당히 말했던 곰부는 초라한 뒷모습으로 곰왕국으로 돌아가야 합니다.")
        print("지금도 곰수는 호랑이 왕국에서 형이 오길 손꼽아 기다리고 있겠지요.")
        print('')
        print("<<BAD ENDING>> : 용감하지만 무모하고 초라한 왕자")
        time.sleep(30)
        quit()
    else:
        print(" ")


# 마차> 지불할 품삯이 모자랄 경우(최소 여행경비 부족), 게임은 종료된다/ 배드엔딩
def endingB(B):
    money_min_B = B
    if money_min_B < 400:
        print()
        print("계획없이 급하게 출발한 탓일까요?")
        print("곰부는 호랑이 왕국으로 자신을 인도할 마부에게 줄 돈이 부족했습니다.")
        print("곰부는 곰킹, 곰마마를 볼 면목이 없어졌습니다.")
        print("동생 곰수는 형이 오기만 기다리며 하루하루 보내고 있을 겁니다.")
        print("마부에게 돈이 없다며 다시 곰 왕국으로 돌아가자고 말을 꺼내는 곰부.")
        print("곰부의 어깨는 한없이 무겁습니다.")
        print('')
        print("<<BAD ENDING>> : 마부에게 동정 받는 왕자")
        time.sleep(30)
        quit()
    else:
        time.sleep(1)


# 마차> 선금이 없는 경우/ 배드엔딩
def endingC(C):
    money_min_C = C
    if money_min_C < 1500:
        print('')
        print("곰부는 자신의 지갑과 마늘을 보고 한숨을 쉽니다.")
        print("마늘을 너무 많이 사서 마부에게 줄 선금이 없었습니다.")
        print("곰부는 자기만 믿으라며 말했던 과거가 부끄러웠습니다.")
        print("출발도 못하고 떠난 곰부는 욕심 많은 첫째 왕자라고 손가락질 받으며 여생을 살았습니다.")
        print('')
        print("<<BAD ENDING>> : 시야 좁은 욕심쟁이")
        time.sleep(30)
        quit()
    else:
        time.sleep(1)


# 도보> 최소 숙박비가 없는 경우/ 배드엔딩
def endingD(D):
    money_min_D = D
    if money_min_D < 100:
        print('')
        print("그러나 곰부는 숙박비를 지불할 돈이 없었습니다.")
        print("여행경비를 생각해서 마늘을 샀어야 했습니다.")
        print("곰부는 후회하기엔 이미 늦었습니다.")
        print("결국 호랑이 왕국으로 가지 못하고 동생도 지키지 못한 곰부.")
        print("곰부는 돌아가 부모님을 볼 자신이 없어 길 위의 떠돌이가 되어 살아 갑니다.")
        print('')
        print("<<BAD ENDING>> : 가난한 떠돌이")
        time.sleep(30)
        quit()
    else:
        time.sleep(1)


# 도보> 체력 다 떨어진 경우/ 배드엔딩
def endingF(F):
    power_min = F
    if power_min < 0:
        print("곰부는 갑자기 어지러움을 느끼더니 휙 하고 쓰러졌습니다.")
        print("무거운 짐을 지고 하루종일 걷는데도 자기 몸을 보살피지 않은 곰부.")
        print("곰부는 인적 드문 길에서 아주 오랜 시간동안 누워 있었습니다.")
        print("지나가던 행인이 겨우 응급대원을 불러주어 병원으로 이송되었지만 곰부는 눈을 뜨지 못했습니다.")
        print("'곰수를 구해야 하는데...'")
        print('')
        print("<<BAD ENDING>> : 쓰러진 왕자")
        time.sleep(30)
        quit()
    else:
        time.sleep(1)


def endingH(H):
    # 해피엔딩
    line()
    print("<<마지막 날>>")
    print("곰부는 마지막 발걸음을 옮겼습니다.")
    print("저 멀리에 호랑이 왕국이 보이기 시작합니다.")
    print("곰부는 서둘러 호랑이 왕국으로 향합니다.")
    line()
    print('"호랑왕님, 곰 왕국의 첫째 왕자 곰부가 왔습니다."')
    print('"요구한 마늘은 챙겨왔는가?"')
    print('곰부는 마늘 500개를 호랑왕에게 건넸고, 호랑왕은 신하에게 마늘을 세어보게 합니다.')
    manuel = H - 500
    print('곰부는 분노를 참으며 말합니다.')
    print('"이제 그만 제 동생을 풀어 주십시오!"')
    print('"정확히 500개를 가져왔군. 둘째 곰 왕자를 보내 주거라."')
    print('"예."')
    print("...")
    time.sleep(3)
    print('"형님!"')
    print('"곰수야!"')
    print('곰부는 피부가 탱탱해지고 배가 빵빵한 곰수를 보고 놀랍니다.')
    print('분명 곰수는 빛이 들지 않는 감옥에서 굶으면서 지냈을 텐데 이상했습니다.')
    print('"형님, 호랑왕님과 신하분들이 저를 구해줬습니다."')
    print('...')
    time.sleep(3)
    print('사건의 전말은 이랬습니다.')
    print('곰수는 좋아하는 호랑이 왕국의 아가씨를 만나러 외출을 했다가 발을 헛디뎌 산 아래로 떨어지고 맙니다.')
    print('먼 나라와 무역 협정을 맺기 위해 떠났다가 돌아오던 호랑왕과 신하들이 기절한 곰수를 발견합니다.')
    print('바쁜 호랑왕은 곰수를 데리고 호랑이 왕국으로 돌아옵니다.')
    print('호랑왕은 곰수를 정성껏 보살피는 대신, 자국에서 나지 않는 마늘 500개를 얻어 아픈 백성들을 치유하고자 하였습니다.')
    print('따뜻한 나라, 인정 넘치는 임금의 이미지를 얻고 싶지는 않아서 협박문을 보냈던 거지요.')
    print('곰 왕국에서 곰수를 찾으러 오지 않더라도 열흘 뒤 보내 줄 생각이었다고 합니다.')
    line()
    print('호랑왕은 곰 왕국까지 빠르게 갈 수 있는 호랑이 택시를 제공해 주었습니다.')
    if manuel > 100:  # 100개 이상의 마늘이 남았을 경우 event엔딩 1,2
        print('"곰수야, 사실 마늘을 더 많이 가져왔어."')
        print("곰부는", manuel, "개의 마늘을 주머니에서 꺼냅니다.")
        print('곰부는 곰 왕국에서는 아주 많이 나는 마늘이 없어서 전염병으로 죽고 있는 백성을 둘러봅니다.')
        print('System: 남은 마늘을 어떻게 하실 건가요?')
        E = 1
        while E == 1:
            print('(1) 호랑이 왕국에 기부한다. (2) 호랑이 왕국에 판매한다.(개당 50원)')
            last = int(input())
            if last == 1:
                print('겨우 가져 온 마늘이었지만, 곰부는 백성을 보고 지나칠 수 없었습니다.')
                print('"남은 마늘은 호랑이 왕국에 기부하겠습니다."')
                print('"감사한 마음을 이렇게나마 갚고 싶습니다."')
                print('곰부는 익명으로 호랑이 왕국에 남은 마늘', manuel, '개를 기부합니다.')
                line()
                print('시간이 많이 흘러 곰부는 곰 왕국에서 호랑이 왕국의 기사를 봅니다.')
                print('호랑이 왕국의 전염병이 사라지고 처음으로 마늘 생산에 성공했다는 소식입니다.')
                print('호랑이 왕국 백성의 인터뷰가 한 줄 수록되어 있습니다.')
                print('백성: 이름 모를 곰님 덕분에 우리 딸이 다시 살아 났습니다. 감사합니다.')
                print('곰부는 기사에서 눈을 뗄 수 없었습니다.')
                print('')
                print('"곰왕님, 식사하실 시간입니다."')
                print('"알겠네."')
                print('곰부는 기사를 덮고 몸을 일으킵니다.')
                print('곰 왕국의 하루는 오늘도 계속 됩니다.')
                print('')
                print("<<Happy Ending>> : 따뜻하고 어진 임금, 곰부")
                E = 2
            elif last == 2:
                print('곰부는 마늘을 판매하기로 결심했습니다.')
                print("'호랑이 왕국에선 마늘이 나지 않으니까 이게 나라를 돕는게 아닐까?'")
                print('곰 왕국에서 생산된 품질 좋은 마늘이 있다는 말을 듣고 아픈 백성들이 줄을 섰습니다.')
                print('곰부는 10원에 사온 마늘을 시세에 맞추어 50원에 전부 판매했습니다. 없어서 돌아간 백성도 많았습니다.')
                print('곰부는 순식간에 손에 들어온 돈', manuel * 50, '원을 보며 희열을 느낍니다.')
                line()
                print('곰부는 곰 왕국에 돌아와서도 큰 돈을 벌 생각을 계속 했습니다.')
                print('배가 고픈 사람은 밥이 필요하고 아픈 사람은 약이 필요하지요.')
                print('곰부는 그런 사람들에게 밥과 약을 주며 이득을 취하는 삶을 계속 살아 갑니다.')
                print('동생 곰수는 자신을 구하러 왔던 따뜻한 마음의 형이 낯설게 느껴집니다.')
                print('곰부는 재능을 찾았지만, 무언가 잃어버렸는지도 모르겠네요.')
                print('')
                print("<<Happy Ending>> : 야망 넘치는 장사꾼")
                E = 2
            else:
                print('다시 말씀해주세요.')
    else:  # 일반적인 엔딩, 곰수를 구한 왕자
        print('곰부와 곰수는 호랑궁전을 돌아봅니다.')
        print('"우리 꼭 돌아가면 호랑왕이 멋있는 왕이었다는 것을 나라에 알리자."')
        print('"예, 형님." 곰수는 고마운 눈빛으로 곰부를 바라보았습니다.')
        print('곰부와 곰수의 관계처럼, 곰 왕국과 호랑이 왕국도 언젠가는 나란히 오래오래 함께할 것입니다.')
        print('')
        print("<<Happy Ending>> : 용기 있고 다정한 왕자")
        time.sleep(30)
        quit()


# ------------------------------------------------------------------------------------------------------
# 산적 1/3 발생
import random


def sanjuck():
    sanjucks = int(random.randrange(1, 2, 3))
    if sanjucks == 1:
        print("이런, 산적이 나타났습니다!")
    elif sanjucks == 2 or 3:
        print("다행히도 산적은 나타나지 않았습니다.")
        print("곰부는 안심하며 눈을 붙입니다.")


# 산길
go_day_1 = ['첫째 날', '둘째 날', '셋째 날']
if go == 1:
    print("<<산길로 가는 방법>>")
    method_sangli()
    line()
    print("곰부는 산길로 향했습니다.")
    for i in go_day_1:
        print("<<", i, ">>")
        print("곰부는 하루종일 힘겹게 산을 올랐습니다.")
        print("해가 뉘엿뉘엿 넘어가고 있습니다.")
        print("곰부는 곧 다가올 밤을 준비해야 합니다.")
        print("산적이 나타나면 곰부는 아무런 저항도 하지 못한 채 마늘을 빼앗기겠지요.")
        print("1500원을 지불하고 오늘 밤 경호원을 고용할까요? (남은 돈:", money, "원)")
        print("(1)고용한다 (2)고용하지 않는다")
        goyong = int(input())
        # 고용O
        if goyong == 1 and money > 1500:
            print("마늘 500개를 꼭 지켜야 돼. 곰수가 먼 나라에서 겁에 질려 날 기다리고 있어.")
            money = money - 1500
            print("곰부는 1500원을 지불하여 경호원을 고용했습니다. (남은 돈:", money, "원)")
            # 랜덤 1/3으로 산적 등장
            sanjucks = int(random.randrange(1, 4))
            # 고용o-산적o
            if sanjucks == 1:
                line()
                print("산적이 나타났습니다!")
                print("다행히도 경호원이 산적을 쫓아냈습니다.")
                print("곰부는 안심하고 편안하게 잠이 듭니다.")
            # 고용o-산적x
            elif sanjucks == 2 or 3:
                line()
                print("산적은 나타나지 않았습니다.")
                print("긴장이 풀린 곰부는 스르르 잠이 들었습니다.")
                print("경호원은 곰부의 곁을 동이 틀 때까지 지켜주었습니다.")
        # 고용X
        elif goyong == 2:
            print("설마 오늘 산적을 마주치겠어?")
            sanjucks = int(random.randrange(1, 4))
            # 고용x-산적O
            if sanjucks == 1:
                line()
                print("산적이 나타났습니다!")
                print("곰부는 무기를 들고 위협하는 산적에게 어떠한 저항도 할 수 없었습니다.")
                print("곰부는 가진 마늘의 1/4을 빼앗깁니다.")
                manuel = manuel * 3 / 4
                print("남은 마늘 수: ", int(manuel), "개")
                ending(manuel)
            # 고용x-산적x
            elif sanjucks == 2 or 3:
                line()
                print("산적은 나타나지 않았습니다.")
                print("곰부는 긴장을 풀지 않고 뜬눈으로 밤을 지새웁니다.")
        elif money < 1500:
            print("오랜 고민 끝에 결정을 내린 곰부는 빈 지갑을 바라 봅니다.")
            print("고민을 할게 아니었어. 애초에 고용할 돈이 없는 걸.")
            print("곰부는 '설마 오늘 산적이 나오진 않겠지'하며 홀로 산길을 나아갑니다.")
            sanjucks = int(random.randrange(1, 4))
            # 고용x-산적O
            if sanjucks == 1:
                line()
                print("산적이 나타났습니다!")
                print("곰부는 무기를 들고 위협하는 산적에게 어떠한 저항도 할 수 없었습니다.")
                print("곰부는 가진 마늘의 1/4을 빼앗깁니다.")
                manuel = manuel * 3 / 4
                print("남은 마늘 수: ", int(manuel), "개")
                ending(manuel)
            # 고용x-산적이 나타나지 않은 경우
            elif sanjucks == 2 or 3:
                line()
                print("산적은 나타나지 않았습니다.")
                print("곰부는 긴장을 풀지 않고 뜬눈으로 밤을 지새웁니다.")
    endingH(manuel)



# 마차-------------------------------------------------------------------------------------
elif go == 2:
    print("곰부는 마차를 타기 위해 마굿간으로 향했습니다.")
    print("<<마차로 가는 방법>>")
    method_macha()
    print("곰부는 멋있는 마차를 고르고 지갑을 꺼냅니다.")
    endingC(money)
    money = money - 1500
    print("곰부는 마부에게 선금 1500원을 지불합니다. (남은 돈:", money, "원)")
    go_day_2 = ['첫째 날', '둘째 날', '셋째 날', '넷째 날', '다섯째 날', '여섯째 날']
    for i in go_day_2:
        print("<<", i, ">>")  # 옆에 도착까지 며칠 남았는지 적기
        print("날이 밝았습니다.")
        print("곰부는 마차에 탑승했습니다.")
        print("곰부는 마부에게 하루의 품삯을 미리 주어야 합니다. 하루 400원이며 잘 부탁한다는 의미로 더 많이 줄 수도 있습니다.")
        endingB(money)
        # 여기서 돈이 400원 이하면 배드엔딩2: 갈 돈이 없음.
        D = 1
        while D == 1:
            print("얼마를 지불할까요?  (남은 돈:", money, "원)")
            survice_money = int(input())
            if survice_money > money:
                print("보유한 돈보다 많은 금액을 지불할 수는 없습니다. 다시 입력하세요.")
            # 다시 입력
            elif survice_money < 400:
                print("최소 400원은 지불해야 합니다. 다시 입력하세요.")
            elif survice_money == 400:
                money = money - survice_money
                print("마부에게 ", survice_money, "원을 지불했습니다. (남은 돈:", money, "원)")
                print("마부는 돈을 낚아채듯 가져가고 마차를 몰기 시작합니다.")
                break
            else:  # 많이 주면 따뜻한 말 건네도록 수정하기
                money = money - survice_money
                print("마부에게 ", survice_money, "원을 지불했습니다. (남은 돈:", money, "원)")
                print("마부는 자기만 믿으라며 씨익 웃으며 마차를 몰기 시작합니다.")
                break
        print("곰부는 곰수를 걱정하는 것도 잠시, 이내 바깥의 풍경에 빠져듭니다.")
        print("덜컹거리는 마차를 타고 다른 나라로 가는 것은 처음이었지요.")
        print("곰부는 새로운 세상을 만끽하며 편안하게 하루를 마무리합니다.")
        line()
    endingH(manuel)
    # 돈 분배 잘 해서 도착한 경우의 엔딩#

# 도보--------------------------------------------------------------------------------------
elif go == 3:
    print("곰부는 짐을 챙겨 길을 나섭니다.")
    print("<<걸어 가는 법>>")
    method_walk()
    go_day_3 = ['둘째 날', '셋째 날', '넷째 날', '다섯째 날', '여섯째 날', '일곱째 날', '여덟째 날', '아홉째 날']
    power = 100
    print("<<첫째 날>>")
    print("곰부는 손에 든 마늘을 바라봅니다. 마늘은 총", manuel, "개. 상당히 무겁습니다.")
    print("중간중간 쉬어도 보았지만, 곱게 자라온 곰부는 발이 아프기 시작합니다.")
    power = 100 - int(4 + manuel * 1 / 100)
    print("곰부의 체력이 ", int(4 + manuel * 1 / 100), "만큼 감소합니다. (남은 체력:", power, ")")
    print("길을 걷다보니 맛있는 음식과 편안한 이불이 있는 숙소와 최소한의 비용으로 묵을 수 있는 숙소가 있습니다.")
    # 고급숙소 묵을 돈이 없으면 무조건 일반 숙소, 일반 숙소 이용할 돈조차 없는 경우 배드엔딩
    if money < 100:
        endingD(money)
    elif money < 300:
        print("곰부는 돈이 부족하여 일반 숙소를 이용합니다. (-100원)")
        money = money - 100
        print("낡은 시설이었지만 곰부는 신경쓸 겨를 없이 지쳐 잠이 듭니다.")
        print("곰부의 남은 경비:", money, "곰부의 체력:", power)
    else:
        D = 0
        while D == 0:
            print("어느 숙소에서 휴식을 취하겠습니까? (남은 경비:", money, ')')
            print("(1) 고급 숙소: 하룻밤 300원, 체력 5 회복.")
            print("(2) 일반 숙소: 하룻밤 100원, 체력 회복 없음.")
            pick_sookso = int(input())
            if pick_sookso == 1:
                money = money - 300
                power = power + 5
                print("곰부는 300원을 지불하여 고급 숙소에 들어갔습니다.")
                print("힘들었던 하루를 편하게 마무리합니다. 체력이 5만큼 회복됩니다.")
                print("곰부의 남은 경비:", money, "곰부의 체력:", power)
                D = 1
            elif pick_sookso == 2:
                money = money - 100
                print("곰부는 100원을 지불하여 합리적인 숙소를 선택합니다.")
                print("낡은 시설이었지만 곰부는 신경쓸 겨를 없이 지쳐 잠이 듭니다.")
                print("곰부의 남은 경비:", money, "곰부의 체력:", power)
                D = 1
            else:
                print("다시 입력해 주세요.")
    for i in go_day_3:
        line()
        print("<<", i, ">>")  # 옆에 도착까지 며칠 남았는지 적기
        print("날이 밝았습니다.")
        print("곰부는 앞으로 갈 길을 생각하여 오늘도 부지런히 발을 옮깁니다.")
        power = power - int(4 + manuel * 1 / 100)
        print("곰부의 체력이 ", int(4 + manuel * 1 / 100), "만큼 감소합니다. (남은 체력:", power, ")")
        # 곰부 체력 0 이하면 끝. 배드엔딩
        endingF(power)
        print("길을 걷다보니 맛있는 음식과 편안한 이불이 있는 숙소와 최소한의 비용으로 묵을 수 있는 숙소가 있습니다.")
        if money < 100:
            endingD(money)
        elif money < 300:
            print("곰부는 돈이 부족하여 일반 숙소를 이용합니다. (-100원)")
            money = money - 100
            print("낡은 시설이었지만 곰부는 신경쓸 겨를 없이 지쳐 잠이 듭니다.")
            print("곰부의 남은 경비:", money, "곰부의 체력:", power)
        else:
            D = 0
            while D == 0:
                print("어느 숙소에서 휴식을 취하겠습니까? (남은 경비:", money, ')')
                print("(1) 고급 숙소: 하룻밤 300원, 체력 5 회복.")
                print("(2) 일반 숙소: 하룻밤 100원, 체력 회복 없음.")
                pick_sookso = int(input())
                if pick_sookso == 1:
                    money = money - 300
                    power = power + 5
                    print("곰부는 300원을 지불하여 고급 숙소에 들어갔습니다.")
                    print("힘들었던 하루를 편하게 마무리합니다. 체력이 5만큼 회복됩니다.")
                    print("곰부의 남은 경비:", money, "곰부의 체력:", power)
                    D = 1
                elif pick_sookso == 2:
                    money = money - 100
                    print("곰부는 100원을 지불하여 합리적인 숙소를 선택합니다.")
                    print("낡은 시설이었지만 곰부는 신경쓸 겨를 없이 지쳐 잠이 듭니다.")
                    print("곰부의 남은 경비:", money, "곰부의 체력:", power)
                    D = 1
                else:
                    print("다시 입력해 주세요.")
    endingH(manuel)













